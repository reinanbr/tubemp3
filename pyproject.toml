[tool.poetry]
name = "tubemp3"
version = "0.3"
description = "lib for getting info music"
authors = ["ReinanBr"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
yt-dlp = "^2025.8.27"
requests = "^2.32.3"
tqdm = "^4.66.5"
mutagen = "^1.47.0"
kitano = "^0.0.8.5"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
pytest-timeout = "^2.3.1"
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
twine = "^6.2.0"
setuptools = "^80.3.2"
pylint = "^3.3.4"

[tool.poetry.group.build.dependencies]
build = "^1.0.0"
wheel = "^0.42.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--disable-warnings",
    "--color=yes"
]
markers = [
    "slow: marks tests as slow (deselect with -m 'not slow')",
    "integration: marks tests as integration tests",
    "network: marks tests that require network access",
    "unit: marks tests as unit tests"
]
timeout = 300
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["tubemp3"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "testing.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tubemp3"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
